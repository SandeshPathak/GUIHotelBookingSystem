package GUI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.ButtonModel;
import GUI.Bedroom;
import GUI.BookingDate;

/**
 *
 * @author sandeshpathak
 */
public class HotelBookingSystemGUI extends javax.swing.JFrame {

    private Guest theGuest;
    private Bedroom roomandguestDetails;
    private BookingDate bookingDate;
    private Database database;

    public int index;

    public HotelBookingSystemGUI() {  //Constructor
        initComponents();
        anotherMiddle.setVisible(false);
        bottomPanel.setVisible(false);
        rightPanel.setVisible(false);

        theGuest = new Guest(); //New Object of the Guest class
        roomandguestDetails = new Bedroom(); //New Object of the Bedroom class
        bookingDate = new BookingDate(); //New Object of the BookingDate class
        database = new Database();    //A new object of Database Class

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        topPanel = new javax.swing.JPanel();
        hotelName = new javax.swing.JLabel();
        hotelAddress = new javax.swing.JLabel();
        hotelTelephone = new javax.swing.JLabel();
        hotelEmail = new javax.swing.JLabel();
        middlePanel = new javax.swing.JPanel();
        checkinDate = new javax.swing.JTextField();
        checkinLabel = new javax.swing.JLabel();
        checkoutDate = new javax.swing.JTextField();
        checkoutLabel = new javax.swing.JLabel();
        checkAvailability = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();
        detailsLabel = new javax.swing.JLabel();
        anotherMiddle = new javax.swing.JPanel();
        oneBedroom = new javax.swing.JRadioButton();
        doubleBedroom = new javax.swing.JRadioButton();
        deluxeBedroom = new javax.swing.JRadioButton();
        guestsBox = new javax.swing.JComboBox<>();
        guestLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        errormessageLabel = new javax.swing.JLabel();
        guestsandBedroom = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        personalInformation = new javax.swing.JLabel();
        firstnameLabel = new javax.swing.JLabel();
        lastnameLabel = new javax.swing.JLabel();
        contactnumberLabel = new javax.swing.JLabel();
        firstnametextField = new javax.swing.JTextField();
        lastnametextField = new javax.swing.JTextField();
        contactnumbertextField = new javax.swing.JTextField();
        firstnameerrorLabel = new javax.swing.JLabel();
        lastnameerrorLabel = new javax.swing.JLabel();
        contactnumbererrorLabel = new javax.swing.JLabel();
        anothersubmitButton = new javax.swing.JButton();
        finalmessageLabel = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        bookingSummary = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookinginfotextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        hotelName.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        hotelName.setText("Ramada City Hotel ");

        hotelAddress.setText("28, Queen Street, Auckland CBD");

        hotelTelephone.setText("Telephone: 07- 0333- 1212");

        hotelEmail.setText("Email: Ramadacity@Ramada.co.nz");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(hotelName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hotelEmail)
                    .addComponent(hotelTelephone)
                    .addComponent(hotelAddress))
                .addGap(106, 106, 106))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hotelName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hotelAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hotelTelephone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hotelEmail)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        checkinLabel.setText("Check In Date ");

        checkoutLabel.setText("Check out Date");

        checkAvailability.setText("Check Availability");
        checkAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAvailabilityActionPerformed(evt);
            }
        });

        dateLabel.setFont(new java.awt.Font("Mshtakan", 1, 15)); // NOI18N
        dateLabel.setText("Choose a Date (DD-MM-YYYY)");

        javax.swing.GroupLayout middlePanelLayout = new javax.swing.GroupLayout(middlePanel);
        middlePanel.setLayout(middlePanelLayout);
        middlePanelLayout.setHorizontalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middlePanelLayout.createSequentialGroup()
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkoutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel))
                .addGap(30, 30, 30)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkAvailability)
                    .addGroup(middlePanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        middlePanelLayout.setVerticalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middlePanelLayout.createSequentialGroup()
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkinDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(checkoutDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(checkAvailability)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkinLabel)
                    .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        buttonGroup1.add(oneBedroom);
        oneBedroom.setText("OneBedroom");

        buttonGroup1.add(doubleBedroom);
        doubleBedroom.setText("DoubleBedroom");

        buttonGroup1.add(deluxeBedroom);
        deluxeBedroom.setText("DeluxeBedroom");

        guestsBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        guestLabel.setText("Guests");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        errormessageLabel.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        errormessageLabel.setForeground(new java.awt.Color(0, 0, 255));

        guestsandBedroom.setFont(new java.awt.Font("Mshtakan", 1, 15)); // NOI18N
        guestsandBedroom.setText("Guests and Bedroom");

        javax.swing.GroupLayout anotherMiddleLayout = new javax.swing.GroupLayout(anotherMiddle);
        anotherMiddle.setLayout(anotherMiddleLayout);
        anotherMiddleLayout.setHorizontalGroup(
            anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anotherMiddleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(guestLabel))
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addComponent(guestsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109)
                        .addComponent(oneBedroom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doubleBedroom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deluxeBedroom)
                        .addGap(124, 124, 124)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(anotherMiddleLayout.createSequentialGroup()
                .addGroup(anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(guestsandBedroom))
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(errormessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 349, Short.MAX_VALUE))
        );
        anotherMiddleLayout.setVerticalGroup(
            anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(anotherMiddleLayout.createSequentialGroup()
                .addComponent(guestsandBedroom)
                .addGroup(anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(guestsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(anotherMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(oneBedroom)
                                .addComponent(doubleBedroom)
                                .addComponent(deluxeBedroom))))
                    .addGroup(anotherMiddleLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(submitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guestLabel)
                .addGap(3, 3, 3)
                .addComponent(errormessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        personalInformation.setBackground(new java.awt.Color(0, 51, 0));
        personalInformation.setFont(new java.awt.Font("Mshtakan", 1, 15)); // NOI18N
        personalInformation.setText("Personal Information");

        firstnameLabel.setText("First Name");

        lastnameLabel.setText("Last Name");

        contactnumberLabel.setText("Contact Number");

        anothersubmitButton.setText("Submit");
        anothersubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anothersubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomPanelLayout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(personalInformation))
                    .addGroup(bottomPanelLayout.createSequentialGroup()
                        .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(firstnameLabel))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(firstnametextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(firstnameerrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(lastnameLabel))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(lastnametextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(lastnameerrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(contactnumberLabel))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(contactnumbertextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(anothersubmitButton))
                            .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addGap(162, 162, 162)
                                .addComponent(contactnumbererrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 279, Short.MAX_VALUE))
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(finalmessageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addComponent(personalInformation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnameLabel)
                    .addComponent(lastnameLabel)
                    .addComponent(contactnumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnametextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnametextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactnumbertextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anothersubmitButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstnameerrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastnameerrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactnumbererrorLabel))
                .addGap(49, 49, 49)
                .addComponent(finalmessageLabel)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        bookingSummary.setText("Booking Summary");

        bookinginfotextArea.setColumns(20);
        bookinginfotextArea.setRows(5);
        bookinginfotextArea.setText("\tPersonal Information\nName: \nPhone number:\n\n\tBooking Information\nCheck in Date:\nCheck out Date:\nGuests:\nRoom Booked: \n\n\n\n\nPlease see the receptionist for the payment.");
        jScrollPane1.setViewportView(bookinginfotextArea);

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bookingSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookingSummary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(anotherMiddle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(middlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 56, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(middlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anotherMiddle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAvailabilityActionPerformed

        if (evt.getSource() == checkAvailability) { //If Check Availability button is pressed

            detailsLabel.setVisible(false);

            this.bookingDate.setCheckin(checkinDate.getText());//Save the checkin date entered
            this.bookingDate.setCheckout(checkoutDate.getText());//save the check out date entered

            int totalYearsBooked, totalMonthsBooked, totalDaysBooked;

            if (this.bookingDate.getCheckin().isEmpty()) {
                checkinLabel.setText("Check in is Empty");
                checkinLabel.setForeground(Color.red);

            }
            if (this.bookingDate.getCheckout().isEmpty()) {
                checkoutLabel.setText("Check out is Empty");
                checkoutLabel.setForeground(Color.red);

            }

            if (this.bookingDate.getCheckin().isEmpty() == false && this.bookingDate.getCheckout().isEmpty() == false) {

                try {

                    LocalDate current_date = java.time.LocalDate.now();//Current date 

                    DateTimeFormatter checkin_date_formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy"); //Date Formatter

                    DateTimeFormatter checkout_date_formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

                    this.bookingDate.setFormatted_checkin_date(LocalDate.parse(this.bookingDate.getCheckin(), checkin_date_formatter));

                    this.bookingDate.setFormatted_checkout_date(LocalDate.parse(this.bookingDate.getCheckout(), checkout_date_formatter));

                    boolean valid_checkin_date = this.bookingDate.getFormatted_checkin_date().isAfter(current_date);
                    boolean valid_checkout_date = this.bookingDate.getFormatted_checkout_date().isAfter(this.bookingDate.getFormatted_checkin_date()) && this.bookingDate.getFormatted_checkout_date().isAfter(current_date);

                    Period intervalPeriod = Period.between(this.bookingDate.getFormatted_checkin_date(), this.bookingDate.getFormatted_checkout_date());
                    totalYearsBooked = intervalPeriod.getYears();
                    totalMonthsBooked = intervalPeriod.getMonths();
                    totalDaysBooked = intervalPeriod.getDays();

                    if (!valid_checkin_date) {
                        if (valid_checkout_date) {
                            checkinLabel.setText("Past Date");
                            checkinLabel.setForeground(Color.red);
                            checkoutLabel.setText("Check out Date");
                            checkoutLabel.setForeground(Color.black);
                        }

                        if (!valid_checkout_date) {
                            checkinLabel.setText("Past Date");
                            checkinLabel.setForeground(Color.red);
                            checkoutLabel.setText("Not Valid");
                            checkoutLabel.setForeground(Color.red);

                        }

                    }

                    if (valid_checkin_date) {
                        checkinLabel.setText("Check in Date");
                        checkinLabel.setForeground(Color.black);
                        checkoutLabel.setText("Check out Label");
                        checkoutLabel.setForeground(Color.black);

                        if (!valid_checkout_date) {
                            checkinLabel.setText("Check in Date");
                            checkinLabel.setForeground(Color.black);
                            checkoutLabel.setText("Not valid");
                            checkoutLabel.setForeground(Color.red);
                        }

                    }

                    if (valid_checkin_date && valid_checkout_date) {
                        checkinLabel.setText("Check In Date");
                        checkinLabel.setForeground(Color.black);
                        checkoutLabel.setText("Check out Date");
                        checkoutLabel.setForeground(Color.black);

                        if (totalDaysBooked < 7 && totalMonthsBooked < 1 && totalYearsBooked < 1) { //Cannot book a room for more than 7 days

                            detailsLabel.setText("Thank you for the details");
                            detailsLabel.setVisible(true);
                            detailsLabel.setForeground(Color.blue);
                            database.insertDate(this.bookingDate);  //Database Component
                            anotherMiddle.setVisible(true);
                            // anotherMiddle.setEnabled(true);

                        } else if ((totalDaysBooked > 7) || (totalMonthsBooked > 1 || totalMonthsBooked <= 1) || (totalYearsBooked > 1 || totalYearsBooked <= 1)) {

                            detailsLabel.setText("Cannot book more than 7 days");
                            detailsLabel.setForeground(Color.red);
                            detailsLabel.setVisible(true);
                            checkoutLabel.setText("Check out date");
                            checkoutLabel.setForeground(Color.red);

                        }

                    }

                } catch (Exception E) {
                    detailsLabel.setText("Not a valid input");
                    detailsLabel.setForeground(Color.red);
                    detailsLabel.setVisible(true);

                    checkinLabel.setText("Check In Date");
                    checkinLabel.setForeground(Color.red);
                    checkoutLabel.setText("Check out Date");
                    checkoutLabel.setForeground(Color.red);

                }

            }
            if (this.bookingDate.getCheckin().isEmpty() && !this.bookingDate.getCheckout().isEmpty()) {
                checkinLabel.setText("Check in Empty");
                checkinLabel.setForeground(Color.red);

                checkoutLabel.setText("Check out Date");
                checkoutLabel.setForeground(Color.black);
               // System.out.println("Check in Empty");

            }
            if (this.bookingDate.getCheckout().isEmpty() && !this.bookingDate.getCheckin().isEmpty()) {
                checkoutLabel.setText("Check out Empty");
                checkoutLabel.setForeground(Color.red);

                checkinLabel.setText("Check in Date");
                checkinLabel.setForeground(Color.black);
               // System.out.println("Check out Empty");

            }

        }


    }//GEN-LAST:event_checkAvailabilityActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        if (evt.getSource() == submitButton) { //If Submit button for Guests and Room is clicked

            this.roomandguestDetails.submitCounter = this.roomandguestDetails.getSubmitCounter();
            this.roomandguestDetails.submitCounter++;
            index = guestsBox.getSelectedIndex(); //to get the index choosen by the user

            this.roomandguestDetails.setSelectedguestNumber(++index); //Because the index starts from 0

            if (this.roomandguestDetails.submitCounter == 1) { // Capturing the numberofGuest at the first time when SubmitButton is clicked
                this.roomandguestDetails.setTotalnumberofGuests(index++);

            }

            if (oneBedroom.isSelected()) {
                this.roomandguestDetails.setSingleCounter(this.roomandguestDetails.getSingleCounter() + 1); //To count the number of OneBedroom Selected
               // System.out.println("" + this.roomandguestDetails.getSelectedguestNumber()); //This is index
                this.roomandguestDetails.setRemainingGuests(this.roomandguestDetails.getSelectedguestNumber() - 1);
                int selectedIndex = this.roomandguestDetails.getRemainingGuests() - 1;

                if (this.roomandguestDetails.getRemainingGuests() == 0) {
                    errormessageLabel.setText("Thank you for choosing the room for all guests");
                    errormessageLabel.setForeground(Color.black);
                    submitButton.setEnabled(false);
                    bottomPanel.setVisible(true);
                    database.insertRoom(this.roomandguestDetails); //Database Component

                } else if (this.roomandguestDetails.getRemainingGuests() > 0) {

                    errormessageLabel.setText("Please select rooms for the remaining " + this.roomandguestDetails.getRemainingGuests() + " guests");
                    errormessageLabel.setForeground(Color.red);

                    guestsBox.setSelectedIndex(selectedIndex);
                    guestsBox.setForeground(Color.red);

                }

            }
            if (doubleBedroom.isSelected()) {

                this.roomandguestDetails.setDoubleCounter(this.roomandguestDetails.getDoubleCounter() + 1);// To count the number of doubleBedroom Selected

                this.roomandguestDetails.setRemainingGuests(this.roomandguestDetails.getSelectedguestNumber() - 2);
                int selectedIndex = this.roomandguestDetails.getRemainingGuests() - 1;

                if (this.roomandguestDetails.getRemainingGuests() <= 0) {
                    errormessageLabel.setText("Thank you for choosing the room for all guests");
                    errormessageLabel.setForeground(Color.black);
                    guestsBox.setSelectedIndex(0);
                    database.insertRoom(this.roomandguestDetails); //Database Component

                    submitButton.setEnabled(false);
                    bottomPanel.setVisible(true);

                } else if (this.roomandguestDetails.getRemainingGuests() > 0) {
                    errormessageLabel.setText("Please select rooms for the remaining " + this.roomandguestDetails.getRemainingGuests() + " guests");
                    errormessageLabel.setForeground(Color.red);

                    guestsBox.setSelectedIndex(selectedIndex);
                    guestsBox.setForeground(Color.red);

                }

            }
            if (deluxeBedroom.isSelected()) {

                this.roomandguestDetails.setDeluxeCounter(this.roomandguestDetails.getDeluxeCounter() + 1); // To count the number of deluxe Rooms selected

                this.roomandguestDetails.setRemainingGuests(this.roomandguestDetails.getSelectedguestNumber() - 3);
                int selectedIndex = this.roomandguestDetails.getRemainingGuests() - 1; //To change the number of Guest selected

                if (this.roomandguestDetails.getRemainingGuests() <= 0) {
                    errormessageLabel.setText("Thank you for choosing the room for all guests");
                    errormessageLabel.setForeground(Color.black);
                    guestsBox.setSelectedIndex(0);
                    database.insertRoom(this.roomandguestDetails); //Database Component
                    submitButton.setEnabled(false);
                    bottomPanel.setVisible(true);

                } else if (this.roomandguestDetails.getRemainingGuests() > 0) {
                    errormessageLabel.setText("Please select rooms for the remaining " + this.roomandguestDetails.getRemainingGuests() + " guests");
                    errormessageLabel.setForeground(Color.red);

                    guestsBox.setSelectedIndex(selectedIndex);
                    guestsBox.setForeground(Color.red);

                }

            }

        }


    }//GEN-LAST:event_submitButtonActionPerformed

    private void anothersubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anothersubmitButtonActionPerformed

        finalmessageLabel.setVisible(false);
        if (evt.getSource() == anothersubmitButton) { //When the Personal Details Panel submit button is clicked

            this.theGuest.setFirstName(firstnametextField.getText());
            this.theGuest.setLastName(lastnametextField.getText());
            this.theGuest.setPhoneNumber(contactnumbertextField.getText());

            int length = this.theGuest.getPhoneNumber().length();

            if (this.theGuest.getPhoneNumber().isEmpty()) {
                contactnumbererrorLabel.setText("Field is empty");
                contactnumbererrorLabel.setForeground(Color.red);

            } else if (this.theGuest.getPhoneNumber().matches("[a-zA-Z]+")) {
                contactnumbererrorLabel.setText("Cannot have characters");
                contactnumbererrorLabel.setForeground(Color.red);

            } else if (this.theGuest.getPhoneNumber().matches("[0-9]+") && length != 10) {
                contactnumbererrorLabel.setText("Enter a valid 10 digits number");
                contactnumbererrorLabel.setForeground(Color.red);

            } else if (this.theGuest.getPhoneNumber().matches("[0-9]+") && length == 10) {
                contactnumbererrorLabel.setText("");
                contactnumbererrorLabel.setForeground(Color.black);

            }

            if (this.theGuest.getFirstName().isEmpty()) {
                firstnameerrorLabel.setText("Field is empty");
                firstnameerrorLabel.setForeground(Color.red);
            } else if (!this.theGuest.getFirstName().matches("[a-zA-Z]+")) {
                firstnameerrorLabel.setText("Not Valid, Please re enter");
                firstnameerrorLabel.setForeground(Color.red);

            } else if (this.theGuest.getFirstName().matches("[a-zA-Z]+")) {
                firstnameerrorLabel.setText("");
                firstnameerrorLabel.setForeground(Color.black);

            }

            if (this.theGuest.getLastName().isEmpty()) {
                lastnameerrorLabel.setText("Field is empty");
                lastnameerrorLabel.setForeground(Color.red);

            } else if (!this.theGuest.getLastName().matches("[a-zA-Z]+")) {
                lastnameerrorLabel.setText("Not Valid, Please re enter");
                lastnameerrorLabel.setForeground(Color.red);
            } else if (this.theGuest.getLastName().matches("[a-zA-Z]+")) {
                lastnameerrorLabel.setText("");
                lastnameerrorLabel.setForeground(Color.black);

            }

            if (this.theGuest.getLastName().matches("[a-zA-Z]+") && this.theGuest.getFirstName().matches("[a-zA-Z]+") && this.theGuest.getPhoneNumber().matches("[0-9]+") && length == 10) {
                firstnameerrorLabel.setText("");
                firstnameerrorLabel.setForeground(Color.black);

                lastnameerrorLabel.setText("");
                lastnameerrorLabel.setForeground(Color.black);

                contactnumbererrorLabel.setText("");

                finalmessageLabel.setVisible(true);

                bookinginfotextArea.setText("\tPersonal Information\nName: " + this.theGuest.getFirstName() + " " + this.theGuest.getLastName() + " \nPhone number: " + this.theGuest.getPhoneNumber() + "\n\n\tBooking Information\nCheck in Date: " + this.bookingDate.getFormatted_checkin_date() + "\nCheck out Date: " + this.bookingDate.getFormatted_checkout_date() + "\nGuests: " + this.roomandguestDetails.getTotalnumberofGuests() + "\nRoom Booked: \n" + this.roomandguestDetails.getSingleCounter() + " Single Rooms        $" + this.roomandguestDetails.getSingleroomPrice() + "\n" + this.roomandguestDetails.getDoubleCounter() + " Double Rooms      $" + this.roomandguestDetails.getDoubleroomPrice() + "\n" + this.roomandguestDetails.getDeluxeCounter() + " Deluxe Rooms      $" + this.roomandguestDetails.getDeluxeroomPrice() + "\nTotal Price:             $" + this.roomandguestDetails.getTotalPrice() + "\n\nPlease see the receptionist for the payment.");

                rightPanel.setVisible(true); //Right Panel that has all the booking information

                database.insertGuest(this.theGuest); //Database Component

            }

        }

    }//GEN-LAST:event_anothersubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelBookingSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelBookingSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelBookingSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelBookingSystemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelBookingSystemGUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel anotherMiddle;
    private javax.swing.JButton anothersubmitButton;
    private javax.swing.JLabel bookingSummary;
    private javax.swing.JTextArea bookinginfotextArea;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton checkAvailability;
    private javax.swing.JTextField checkinDate;
    private javax.swing.JLabel checkinLabel;
    private javax.swing.JTextField checkoutDate;
    private javax.swing.JLabel checkoutLabel;
    private javax.swing.JLabel contactnumberLabel;
    private javax.swing.JLabel contactnumbererrorLabel;
    private javax.swing.JTextField contactnumbertextField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JRadioButton deluxeBedroom;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JRadioButton doubleBedroom;
    private javax.swing.JLabel errormessageLabel;
    private javax.swing.JLabel finalmessageLabel;
    private javax.swing.JLabel firstnameLabel;
    private javax.swing.JLabel firstnameerrorLabel;
    private javax.swing.JTextField firstnametextField;
    private javax.swing.JLabel guestLabel;
    private javax.swing.JComboBox<String> guestsBox;
    private javax.swing.JLabel guestsandBedroom;
    private javax.swing.JLabel hotelAddress;
    private javax.swing.JLabel hotelEmail;
    private javax.swing.JLabel hotelName;
    private javax.swing.JLabel hotelTelephone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastnameLabel;
    private javax.swing.JLabel lastnameerrorLabel;
    private javax.swing.JTextField lastnametextField;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JRadioButton oneBedroom;
    private javax.swing.JLabel personalInformation;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton submitButton;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
